plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs'
    // Add the Crashlytics Gradle plugin
    id 'com.google.firebase.crashlytics'
    // Add the Google services Gradle plugin
    id 'com.google.gms.google-services'
}

android {
    namespace rootProject.ext.android.applicationId
    compileSdk rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdk rootProject.ext.android.minSdkVersion
        targetSdk rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        multiDexEnabled true
        vectorDrawables.generatedDensities = []
        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'armeabi'
        }

        proguardFiles 'proguard-rules.pro'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES'
    }
    flavorDimensions "color"

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.getName()}-${variant.name}-${variant.versionCode}${System.currentTimeMillis()}.apk"
        }
    }

    signingConfigs {
        debug {
            storeFile file("$rootDir/fleurs_pret_keystore")
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
        releaseTest {
            storeFile file("$rootDir/fleurs_pret_keystore")
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
        release {
            // 配置文件保存在~/.gradle/gradle.properties
            storeFile file("$rootDir/fleurs_pret_keystore")
            //找不到常量
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            matchingFallbacks = ['release']
            buildConfigField("int", "MODE", "2")
            buildConfigField("String", "HOST", "\"https://test.fleurspret.com\"")
            signingConfig signingConfigs.debug
        }

        releaseTest {
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            matchingFallbacks = ['release']
            buildConfigField("int", "MODE", "1")
            buildConfigField("String", "HOST", "\"https://test.fleurspret.com\"")
            signingConfig signingConfigs.releaseTest
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("int", "MODE", "0")
            buildConfigField("String", "HOST", "\"https://test.fleurspret.com\"")
            signingConfig signingConfigs.release
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.java.java_version
        targetCompatibility rootProject.ext.java.java_version
    }
    kotlinOptions {
        jvmTarget = rootProject.ext.jvmTarget.target
    }
    buildFeatures {
        buildConfig = true
        viewBinding true
        dataBinding true
    }
}

dependencies {
    implementation rootProject.ext.androidx_core.core
    implementation rootProject.ext.androidx_core.appcompat

    implementation rootProject.ext.androidx_widget.material
    implementation rootProject.ext.androidx_widget.fragment_ktx
    implementation rootProject.ext.androidx_widget.ui_ktx

    implementation rootProject.ext.lifecycle.livedata_ktx
    implementation rootProject.ext.lifecycle.viewmodel_ktx

    implementation project(path: ':baselib')
    implementation project(path: ':commonlib')
    implementation project(path: ':network')
    implementation project(path: ':card-camera')

    implementation rootProject.ext.dependencies.smartRefreshLayout
    implementation rootProject.ext.dependencies.baseQuickAdapter
    implementation rootProject.ext.dependencies.permissions
    implementation rootProject.ext.dependencies.eventBus
    implementation rootProject.ext.glides
    implementation rootProject.ext.stethosLibs

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'id.zelory:compressor:2.1.1'

    implementation 'im.crisp:crisp-sdk:1.0.13'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:32.4.0')

    // Add the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx:1.7.1'

    implementation 'com.google.android.play:review:2.0.1'
    implementation 'com.google.android.gms:play-services-location:19.0.1'

    // Facebook Android SDK (everything)
    implementation 'com.facebook.android:facebook-android-sdk:latest.release'
}